# Sample curn configuration file
#
# $Id$
# ---------------------------------------------------------------------------

#############################################################################
# curn section: Configuration items that apply globally. Note that the
#               various sites are specified in their own sections, to
#               permit site-specific configuration.
#############################################################################

[curn]

# ---------------------------------------------------------------------------
# CacheFile: The full path to the file in which curn should cache URLs.
#            curn uses the cache file to keep track of which URLs it
#            has already received and displayed, and when it received them.
#            Under normal operation, curn won't display a URL it has
#            already displayed and cached.
#
#            This path may contain the ~ metacharacter, to denote the
#            invoking user's home directory.
#
#            The use of a cache can be disabled by omitting this parameter.
#            Use the "NoCacheUpdate" parameter to tell curn to read,
#            but not update, the cache.
#
# See also: Configuration parameter "NoCacheUpdate"
#           Command line parameter -C, --nocache
#
# OPTIONAL. Default: None

CacheFile: ${system:user.home}/curn/curn.cache

# ---------------------------------------------------------------------------
# NoCacheUpdate: If set to "true" (and if a cache file is specified),
#                this parameter tells curn to read the cache file and
#                honor its contents, but not to update it on disk.
#
# See also: Configuration parameter "CacheFile"
#           Command line parameter -u, --noupdate
#
# OPTIONAL. Default: false

#NoCacheUpdate: false

# ---------------------------------------------------------------------------
# DaysToCache: Default maximum number of days to cache an already-read URL.
#              This parameter is used when the configuration section for a
#              particular site lacks its own "DaysToCache" value. URLs
#              older than this many days are tossed from the cache when
#              it's read, which means curn forgets that it saw them before.
#              A value of 0 renders the cache useless (i.e., ensures that
#              curn always forgets URLs that are cached)
#
# OPTIONAL. Default: 30

#DaysToCache: 30

# ---------------------------------------------------------------------------
# UserAgent: The default HTTP User-Agent header to use. This configuration
#            parameter permits you to have curn masquerade as a browser to the
#            remote system. This global value is used when the configuration
#            section for a particular feed does not supply its own "UserAgent"
#            value.
#
# OPTIONAL. Default: "curn/x.y.z (+http://www.clapper.org/software/java/curn/)"
#                    (where "x.y.z" is the current curn version number)

#UserAgent: Mozilla/5.0 (X11; U; FreeBSD i686; en-US; rv:1.7.3) Gecko/20040922

# ---------------------------------------------------------------------------
# SortBy: Default method to use to sort items within each feed. This
#         is used when the configuration section for a particular feed
#         lacks its own "SortBy" value.
#
#         Valid values:
#
#         time  - Sort by timestamp, if present. Current time is assumed
#                 for any item without a timestamp.
#         title - Sort by item title, if present. Any item without a title
#                 is sorted as if its title were the empty string.
#         none  - Don't sort. (i.e., Leave items in the order they appear
#                 in the XML.)
#
# OPTIONAL. Default: none

#SortBy: none

# ---------------------------------------------------------------------------
# MaxThreads: Maximum number of concurrent threads to spawn to retrieve
#             the RSS feeds. A value of 1 (the smallest legal value) causes
#             curn to retrieve the feeds serially. Values greater than 1
#             cause curn to spawn up to that many threads to retrieve the
#             feeds concurrently.
#
# See also: Command line option --threads
#
# OPTIONAL. Default: 5

#MaxThreads: 5

# ---------------------------------------------------------------------------
# SummaryOnly: Some RSS feeds provide a description for each item, in addition
#              to the (brief) title. Setting "SummaryOnly" to "true" (or
#              "yes") suppresses display of the description. This parameter
#              can be overridden on a per-site basis. This global value sets
#              the default value.
#
# OPTIONAL. Default: false

#SummaryOnly: false

# ---------------------------------------------------------------------------
# MaxSummarySize: If you're displaying the summary (see the SummaryOnly
#                 parameter), you can optionally set a maximum size for the
#                 summary. curn will truncate any summary that is longer than
#                 the maximum number of summary characters, adding a trailing
#                 ellipsis to indicate the truncation. A value of 0 disables
#                 truncation.
#
#                 This parameter may be overridden on a per-feed basis. This
#                 global value sets the default value.
#
# OPTIONAL. Default: 0 (i.e., no limit)

#MaxSummarySize: 0

# ---------------------------------------------------------------------------
# ShowRSSVersion: Show the RSS version associated with each site's feed.
#
# See also: Command line options --rss-version, -r, --no-rss-version, -R
#
# OPTIONAL. Default: false

#ShowRSSVersion: false

# ---------------------------------------------------------------------------
# ShowDates: Show the dates for each feed and item, if available.
#
# See also: Command line options --show-dates, -d, --no-dates, -D
#
# OPTIONAL. Default: false

#ShowDates: false

# ---------------------------------------------------------------------------
# ShowAuthors: Show the authors for each item, if available. This global
#              value can be overridden on a per-feed basis.
#
# See also: Command line options --show-authors, -a, --no-authors, -A
#
# OPTIONAL. Default: false

#ShowAuthors: false

# ---------------------------------------------------------------------------
# ParserClass: The full name of the underlying parser class to be used.
#              This class must implement the org.clapper.curn.RSSParser
#              interface. It can be a first-class parser of its own, or
#              it can be nothing more than an interface to a third party
#              RSS parser class.
#
#              Two parsers are shipped with curn, but only one of them
#              is built by default.
#
#              org.clapper.curn.parser.minirss.MiniRSSParser
#                  A minimal SAX-based RSS parser that handles RSS 0.91,
#                  RSS 0.92, RSS 1.0, RSS 2.0, and ATOM feeds.
#
#              org.clapper.curn.parser.informa.RSSParserAdapter
#                  An adapter class that makes the Informa parser
#                  (http://informa.sourceforge.net/) work with curn.
#                  The Informa adapter does not build by default. Note
#                  that the third-party Informa parser does not support
#                  ATOM.
#
#              Any class that implements org.clapper.parser.RSSParser
#              may be used as a value for ParserClass.
#
# OPTIONAL. Default: org.clapper.curn.parser.minirss.MiniRSSParser

#ParserClass: org.clapper.curn.parser.informa.RSSParserAdapter
ParserClass: org.clapper.curn.parser.minirss.MiniRSSParser

# ---------------------------------------------------------------------------
# GetGzippedFeeds: Directs curn to use the "Accept-Encoding: gzip" HTTP
# header when retrieving an RSS feed from an HTTP server. Since RSS feeds
# are XML, they typically compress well; retrieving gzipped data, rather than
# the uncompressed HTML, can save a significant amount of time and network
# bandwidth--provided, of course, the remote HTTP server honors the
# Accept-Encoding header, which it is not required to do.
#
# OPTIONAL. Default: true

#GetGzippedFeeds: true

# ---------------------------------------------------------------------------
# SMTPHost: The SMTP host to use to mail the output. This option is only
#           honored if email addresses are specified on curn's command
#           line.
#
# OPTIONAL. Default: localhost

#SMTPHost: localhost

# ---------------------------------------------------------------------------
# MailFrom:   The email address to use as the sender ("From:").
#             The address can be a full RFC 2822-compliant address (e.g.,
#             "Joe Blow <joe@example.org>").
#
#             This option is only honored if email addresses are
#             specified on curn's command line.
#
# OPTIONAL. Default: curn uses the current user and host

#MailFrom: Your Name <your_address@example.org>

# ---------------------------------------------------------------------------
# MailSubject: The email subject to use for emailed curn output. This
#              option is only honored if email addresses are specified on
#              curn's command line.
#
# OPTIONAL. Default: "RSS Feeds"

#MailSubject: RSS Feeds

#############################################################################
# Section for an output handler. The section name must start with the string
# "OutputHandler" and must be unique. The portion of the string following
# the "OutputHandler" prefix can be anything (subject to normal configuration
# file syntax constraints). e.g., "outputHandler1", "outputHandler_foo", etc.
#
# All "OutputHandler" sections support two parameters:
#
#     Class:    Specifies the full class name of the output handler.
#               Any class that implements the org.clapper.curn.OutputHandler
#               interface is acceptable.
#
#               This parameter is required.
#
#     Disabled: If set to "true", then the output handler is skipped. If
#               set to "false" or not present, then the output handler is
#               enabled. This configuration parameter makes it easy to enable
#               or disable an output handler, without having to comment it
#               out.
#
#               This parameter is optional.
#
# All other parameters are captured and passed to the output handler
# object's initialization method, but curn itself does not interpret them
# at all. Each output handler class may have its own special parameters (or
# it may support no parameters at all).
#
# If multiple "OutputHandler" sections are present, curn will pass the
# parsed RSS data to an instance of each class, in the order the classes
# appear in the configuration file. If email addresses are specified on the
# command line, curn will buffer the output produced by each output handler,
# if any; curn will then send each separate output stream as
# "multipart/alternative" attachments in the resulting email message.
# Otherwise, curn will display the first output stream it gets back on
# standard output. Regardless of whether email addresses are specified on
# the command line or not, all output handlers will be invoked (unless, of
# course, an error occurs.)
#
# It's not required that an output handler actually hand output back to
# curn. For example, the TextOutputHandler and HTMLOutputHandler classes
# can be configured to save their output, but not report it back to curn.
#
# If no "OutputHandler" sections are present in the configuration file,
# curn skips the RSS XML parsing phase. (There's not reason to parse the
# XML if there are no output handlers to process the parsed feed data.)
# If there are no output handlers, curn may or may not download individual
# feeds. If a given feed has no "SaveAs" setting, and there are no output
# handlers, then curn skips the feed entirely. After all, there's no sense
# wasting time downloading the feed, if the feed isn't being parsed or
# saved. However, if the feed has a "SaveAs" setting, curn will download it
# (if it has changed) and save it even if it's not parsing the XML.
#############################################################################

[OutputHandlerText]

# org.clapper.curn.output.TextOutputHandler
#
# Writes parsed RSS data in a simple text format.
#
# Additional parameters:
#
# SaveAs:   Save a copy of the text to a specified file.
# SaveOnly: If "true", save the text to the "SaveAs" file, but don't provide
#           any output to curn. If "false" or absent, provide output to curn.

Class: org.clapper.curn.output.TextOutputHandler
Disabled: false
#SaveAs: ${system:user.home}/curn/rss.txt
#SaveOnly: false

[OutputHandlerHTML]

# org.clapper.curn.output.html.HTMLOutputHandler
#
# Writes parsed RSS data in HTML. This class only builds if the
# third-party XMLC toolset is in the build environment.
#
# Additional parameters:
#
# SaveAs:       Save a copy of the text to a specified file.
# SaveOnly:     If "true", save the text to the "SaveAs" file, but don't
#               provide any output to curn. If "false" or absent, provide
#               output to  curn.
# Title:        Title to use in the generated HTML. Defaults to "RSS Feeds"
# HTMLEncoding: Specify the encoding to use when writing the HTML document.
#               Defaults to "utf-8" if not specified.

Class: org.clapper.curn.output.html.HTMLOutputHandler
Disabled: false
#SaveAs: ${system:user.home}/curn/rss.html
#SaveOnly: false
#Title: RSS Feeds
HTMLEncoding: utf-8

[OutputHandlerScript]

# org.clapper.curn.output.script.ScriptOutputHandler
#
# Call an Apache Jakarta Bean Scripting Frameworkd-based script to generate
# the output.
#
# Additional parameters:
#
# Script:   Path to the script
# Language: The script language, as recognized by BSF
# SaveAs:   Save a copy of the text to a specified file.
# SaveOnly: If "true", save the text to the "SaveAs" file, but don't provide
#           any output to curn. If "false" or absent, provide output to curn.
#
# The script may also have parameters of its own.

Class: org.clapper.curn.output.script.ScriptOutputHandler
Disabled: true
Script: ${system:user.home}/curn/generate_output.py
Language: jython
#SaveAs: ${system:user.home}/curn/rss-py.txt
#SaveOnly: false

#############################################################################
# Section for an RSS site. The section name must start with the string
# "Feed" and must be unique. The portion of the string following the "Feed"
# prefix can be anything (subject to normal configuration file syntax
# constraints). e.g.: "Feed01", "Feed5", "Feed_nyt_politics", etc.
#############################################################################

[Feed1]

# ---------------------------------------------------------------------------
# URL: The fully-qualified URL for the feed
#
# REQUIRED.

URL: http://www.example.org/rss/nytimes/politics.xml

# ---------------------------------------------------------------------------
# DaysToCache:  Maximum number of days to cache an already-read URL for this
#               site. URLs older than this are tossed from the cache when
#               it's read, which means curn forgets that it saw them
#               before. A value of 0 renders the cache useless (i.e.,
#               ensures that curn always forgets URLs that are cached)
#
# OPTIONAL. Default: 30

DaysToCache: 1

# ---------------------------------------------------------------------------
# TitleOverride: Specifies a string to be used as the site's title, instead
#                of the title supplied in the RSS feed. Useful when the
#                feed-supplied title isn't appropriate or useful.
#
# OPTIONAL. Default: none

#TitleOverride:

# ---------------------------------------------------------------------------
# EditItemURL: Apply the specified regular expression edit to each of the
#              site's RSS item URLS. The value for this option consists of
#              a Perl 5-style substitution applied to the URL. For example:
#
#              1. Remove all the parameters from the URL:
#
#                    's/?.*$//'
#
#              2. Remove a "redirect" CGI from a site whose URLs look
#                 like: http://www.example.com/redir.cgi?http://...
#
#                    's+http://www.example.com/cgi-bin/redir.cgi?++'
#
#              The substitution syntax supports perl's $1, $2, etc.,
#              grouping syntax. For instance:
#
#                    's/^([a-z]+)foo(.*)$/$1bar$2/'
#
#              The substitution syntax supports the following perl-like
#              modifiers, which are appended to the end of the
#              substitution command.
#
#                    g  Substitute for all occurrences of the regular
#                       expression, not just the first one.
#                    i  Do case-insensitive pattern matching. Case-sensitive
#                       pattern matching is the default.
#                    m  Treat the string is consisting of multiple lines.
#                       This modifier changes the meaning of "^" and "$" so
#			that they match just after or just before,
#			respectively, a line terminator or the end of the
#			input sequence. By default these expressions only
#			match at the beginning and the end of the entire
#			input sequence.
#
#              Single quoting the edit string is highly recommended. See
#              the curn User's Guide for more details.
#
# OPTIONAL. Default: none

#EditItemURL:

# ---------------------------------------------------------------------------
# PreparseEdit<xxx>: A parameter in a Feed section that starts with
#                    "PreparseEdit" (e.g., "PreparseEdit1", "PreparseEdit2",
#                    etc.) defines a substitution to be applied to the
#                    downloaded XML file before it is parsed. As with
#                    the EditItemURL option, the value for this option
#                    this option consists of a Perl 5-style substitution.
#
#                    This capability is rarely needed, but it's sometimes
#                    useful for sites that serve unparseable, but easily
#                    fixed, XML. For instance, one news site I read has an
#                    RSS channel whose title always contains an unescaped
#                    "&". The XML parser will not parse that feed; however,
#                    a simple preparse edit command of:
#
#                        's/ & / \&amp; /g'
#
#                    fixes the problem.
#
#                    The substitution syntax supports perl's $1, $2, etc.,
#                    grouping syntax. For instance:
#
#                       's/^([a-z]+)foo(.*)$/$1bar$2/'
#
#                    The substitution syntax supports the following perl-like
#                    modifiers, which are appended to the end of the
#                    substitution command.
#
#                       g  Substitute for all occurrences of the regular
#                          expression, not just the first one.
#                       i  Do case-insensitive pattern matching. Case-sensitive
#                          pattern matching is the default.
#                       m  Treat the string is consisting of multiple lines.
#                          This modifier changes the meaning of "^" and "$" so
#			   that they match just after or just before,
#			   respectively, a line terminator or the end of the
#			   input sequence. By default these expressions only
#			   match at the beginning and the end of the entire
#			   input sequence.
#
#                    Single quoting the edit string is highly recommended. See
#                    the curn User's Guide for more details.
#
#                    Multiple instances of this parameter are permitted, as
#                    long as each instance's name begins with "PreparseEdit"
#                    and contains a unique suffix.
#
# OPTIONAL. Default: none

#PreparseEdit1:

# ---------------------------------------------------------------------------
# Disabled: If set to "true", then this feed is disabled. If set to "false"
#           or if not present, then this feed is enabled. This configuration
#           parameter makes it easy to enable or disable a feed, without
#           having to comment out all its settings.
#
# OPTIONAL. Default: false

Disabled: false

# ---------------------------------------------------------------------------
# SaveAs: If set, this parameter specifies the path to a file where curn
#         should save the contents of this feed, whenever it downloads the
#         feed. This can be useful if you have a master version of curn
#         that downloads and caches a bunch of feeds, with multiple "slave"
#         versions of curn that then run against the downloaded files.
#
# OPTIONAL. Default: none

#SaveAs: /path/to/file.xml

# ---------------------------------------------------------------------------
# SaveAsEncoding: If set, this parameter specifies the encoding to use when
#                 saving the file. This parameter is ignored unless SaveAs
#                 is also specified.
#
# OPTIONAL. Default: utf-8

#SaveAsEncoding: utf-8

# ---------------------------------------------------------------------------
# SaveOnly: If set to "true", and if "SaveAs" is set to something, then the
#           feed is downloaded and saved to the "SaveAs" file, but it is
#           not parsed and not processed.
#
# OPTIONAL. Default: false

#SaveOnly: true

# ---------------------------------------------------------------------------
# PruneURLs: If set to "true", then all item URLs from this site are
#            displayed without HTTP parameters. If set to "false", then URLs
#            are displayed exactly as they appear in the RSS feed.
#
# OPTIONAL. Default: false

PruneURLs: false

# ---------------------------------------------------------------------------
# SortBy: Sort items in this feed by one of several criteria.
#
#         Valid values:
#
#         time  - Sort by timestamp, if present. Current time is assumed
#                 for any item without a timestamp.
#         title - Sort by item title, if present. Any item without a title
#                 is sorted as if its title were the empty string.
#         none  - Don't sort. (i.e., Leave items in the order they appear
#                 in the XML.)
#
# OPTIONAL. Default: the value of the global SortBy parameter, or none

#SortBy: none

# ---------------------------------------------------------------------------
# SummaryOnly: Some RSS feeds provide a description for each item, in addition
#              to the (brief) title. Setting "SummaryOnly" to "true" (or
#              "yes") suppresses display of the description. This parameter
#              in a feed section overrides the global SummaryOnly parameter.
#
# OPTIONAL. Default: the value of the global SummaryOnly option, or false

#SummaryOnly: false

# ---------------------------------------------------------------------------
# MaxSummarySize: If you're displaying the summary (see the SummaryOnly
#                 parameter), you can optionally set a maximum size for the
#                 summary. curn will truncate any summary that is longer than
#                 the maximum number of summary characters, adding a trailing
#                 ellipsis to indicate the truncation. A value of 0
#                 disables truncation. This parameter in a feed section
#                 overrides the global MaxSummarySize parameter.
#
# OPTIONAL. Default: value of the global MaxSummarySize parameter, or 0

#MaxSummarySize: 0

# ---------------------------------------------------------------------------
# IgnoreDuplicateTitles: If true, curn will ignore any item whose title
#                        matches the title of another item in the feed.
#                        (It only compares titles within the feed itself;
#                        it does not compare against titles of cached items.)
#                        Titles are compared without regard to upper or
#                        lower case.
#
#                        This feature (hack, really) is useful for sites
#                        (like Yahoo! News) whose feeds often contain
#                        duplicate items that have different IDs and
#                        different URLs (and thus appear to be unique).
#
# OPTIONAL. Default: false

IgnoreDuplicateTitles: false

# ---------------------------------------------------------------------------
# ForceEncoding: Force curn to ignore the character set encoding advertised
#                by the remote server (if any), and use the character set
#                specified by this configuration parameter, instead. This
#                is useful in the following cases:
#
#                - the remote HTTP server doesn't supply an HTTP
#                  Content-Encoding header, and the local (Java) default
#                  encoding doesn't match the document's encoding
#                - the remote HTTP server supplies the wrong encoding
#                - the feed is a "file" URL, and the default "file" URL
#                  encoding of "utf-8" isn't correct
#
#                This value should be a character set encoding that's
#                recognized by the Java runtime environment.
#
# OPTIONAL. Default: the server- or document-supplied character set encoding,
#                    if present; otherwise, the encoding of the Java VM that's
#                    running curn.

#ForceEncoding: utf-8

# ---------------------------------------------------------------------------
# UserAgent: The HTTP User-Agent header to use when retrieving this feed.
#
# OPTIONAL. Default: Whatever the global "UserAgent" parameter is set to, or
#                    the default curn user agent string, if the global
#                    "UserAgent" parameter isn't set.

#UserAgent: Mozilla/5.0 (X11; U; FreeBSD i686; en-US; rv:1.7.3) Gecko/20040922

# ---------------------------------------------------------------------------
# ShowAuthors: Show the authors for each item, if available. This value
#              overrides the global "ShowAuthors" value.
#
# See also: Command line options --show-authors, -a, --no-authors, -A
#
# OPTIONAL. Default: false

#ShowAuthors: false

