---------------------------------------------------------------------------
CHANGELOG: curn

$Id$
---------------------------------------------------------------------------

Version 1.5.4 (20 October, 2004)

- In the org.clapper.util API, org.clapper.util.misc.Logger is now in the
  org.clapper.util.logging package and is now uses the java.util.logging
  API directly, instead of using Jakarta Commons Logging. This eliminates
  another third-party library dependency, but required modifications
  various "import" statement in curn classes.


Version 1.5.3 (16 October, 2004)

- curn now sets an appropriate "User-Agent" HTTP header on HTTP requests,
  instead of defaulting to whatever the Java VM uses.

- An exception thrown while processing a feed now contains the feed URL
  in its exception message. This is especially useful for emailed log
  exceptions.

- Where possible, exception messages are now stored in properties files and
  accessed via ResourceBundle objects, allowing for localization.


Version 1.5.2 (12 October, 2004)

- Simplified loading of API version, in build.xml. Instead of loading
  version from Version.class, it now loads the version from a properties
  file. The Version class uses the same properties file, as a resource
  bundle.


Version 1.5.1 (10 October, 2004)

- Fixed bug with PreparseEdit per-feed configuration directive (introduced
  in version 1.5). Multiple edit commands would cause duplication of lines
  in feeds XML file.

- If there are no output handlers defined, feeds are not run through the
  XML parser (since there's no point). This was already supposed to be
  happening, but there was this small bug...

- Added "SaveOnly" configuration option to Feed sections. See User's Guide
  or sample config for details.


Version 1.5 (07 October, 2004)

- Now requires JDK 1.4 or better. JDK 1.3 is no longer supported. Among
  the reasons for this requirement:

  * I wanted to use the new assertion capabilities of 1.4

  * The regular expression classes that come with 1.4 are more extensible
    than the Jakarta ORO classes, in that they work with anything that
    implements the CharSequence interface, not just with Strings. Plus,
    using java.util.regexp, instead of Jakarta ORO, removes a third-party
    library dependency.

- Added new PreparseEdit configuration file entry, supported in the Feed
  section. Permits applying perl-like s/// edits to the downloaded XML file
  before it is parsed. Useful for feeds that serve XML files that don't
  parse properly. (One site I read insists on serving a channel that
  contains unescaped "&" characters in the text.) See the User's Guide
  and the sample configuration for details on this new configuration
  parameter.

- Converted code that used Jakarta ORO to use the JDK 1.4 java.util.regexp
  classes.

- Overhauled build.xml to make compilations more efficient. Requires a
  newer version of Jikes (if compiling with Jikes).

- Cleaned up a lot of unnecessary imports. Addressed minor issues that
  Jikes warned about.


Version 1.4.1 (28 September, 2004):

- Added ForceCharacterEncoding (per-feed) configuration parameter. If
  specified, curn will use the supplied character encoding when parsing
  the feed's XML, instead of the server-supplied or document-supplied
  encoding. This is useful in the following cases:

  * the remote HTTP server doesn't supply an HTTP Content-Encoding header, 
    and the local (Java) default encoding doesn't match the document's 
    encoding
  * the remote HTTP server supplies the wrong encoding

  See the Users Guide or the sample configuration file for more information.

- Added HTMLEncoding parameter to the configuration for the HTMLOutputHandler
  (org.clapper.curn.output.html.HTMLOutputHandler) class. This parameter
  sets the desired character set encoding of the generated HTML file.
  The encoding is set in a <META> tag in the document, and it is used when
  opening the output file (to ensure proper translation of characters from
  the in-memory Unicode character set). If not set, it defaults to "utf-8".


Version 1.4 (22 September, 2004):

- All output handlers have been moved under "org.clapper.output". It
  is (regrettably) necessary to update curn configuration files that
  reference the old fully-qualified class names.

  Handler class               Old Package             New Package
  ---------------------------------------------------------------------------
  HTMLOutputHandler           org.clapper.htmloutput  org.clapper.output.html
  SimpleSummaryOutputHandler  org.clapper.curn        org.clapper.curn.output
  TextOutputHandler           org.clapper.curn        org.clapper.curn.output
  ---------------------------------------------------------------------------

- Curn now supports multiple output handlers of the same class in the same
  configuration file.

- Curn now comes bundled with a new ScriptOutputHandler 
  (org.clapper.output.script.ScriptOutputHandler). This handler requires the
  Apache Jakarta Bean Scripting Framework (BSF), available at
  "http://jakarta.apache.org/bsf/". It's basically a shim that uses BSF
  to permit output handlers to be written in any BSF-supported scripting
  language (e.g., Jython, JRuby, Rhino Javascript, etc.)

- The "Quiet" configuration option is no longer supported. If it appears
  in a configuration file, it will be silently ignored. Similarly, the
  --quiet (-q) and --no-quiet (-Q) command line options no longer exist.

- (API) When parsed from the config, output handlers are now wrapped in
  ConfiguredOutputHandler objects, which contain all the config data for
  the handler, and provide a means to instantiate a handler easily.

- (API) The ConfigFile class no longer supports the Quiet configuration
  option, and the methods used to test for the value of that option have
  been removed.


Version 1.3.3 (16 September, 2004):

- Fixed slight problem when translating embedded newlines into spaces in
  parsed XML character data.


Version 1.3.2 (15 September, 2004):

- Now handles feeds with alternate character sets (e.g., UTF-8) better.
  Note that there's still the possibility of information loss if a feed
  with an alternate character set such as UTF-8 is saved to a local file,
  and the local file is then parsed by curn. That's because curn currently
  doesn't have a way to save the original character set, so it converts the
  feed to the Java VM's native character set before saving it to the local
  file.

- Added adapter classes for the Rome RSS parser. (See
  https://rome.dev.java.net/). Test with Rome 0.3. Rome supports all the
  current RSS feed types.

  NOTE: Rome requires version 1.0 of JDOM (http://www.jdom.org/)


Version 1.3.1 (13 September, 2004):

- HTMLOutputHandler now displays channel link properly.


Version 1.3 (09 September, 2004):

- Fixed some caching bugs and problems. First, cache lookups are now
  consistent. Second, the cache now supports lookups by item ID and item
  URL, not just ID, and curn will check for the URL if the item isn't
  cached by ID. (Some RSS feeds provide a unique ID for each item. Some
  don't.) This change fixes caching for (broken) RSS feeds that provide
  different IDs for the same URL. I've seen at least one site where the
  ID for a given item changes daily, even though the item and its link do
  not.


Version 1.2 (28 August, 2004):

- First version of curn posted to the web.
