$Id$
---------------------------------------------------------------------------

PREREQUISITES:
--------------

Before building curn, you'll need:

1. ant, version 1.6.5 or better, available at http://ant.apache.org/

2. The clapper.org utility library, available at
   http://software.clapper.org/java/util/

3. The prerequisite jar files for the clapper.org utility library.

4. The Apache Jakarta Commons Logging API. See 
   http://jakarta.apache.org/commons/logging/

5. The Java Mail API, which, in turn, requires the Java Activation Framework.
   See http://java.sun.com/products/javamail/ 
   and http://java.sun.com/products/javabeans/jaf/index.jsp

6. A SAX2 XML parser library. Apache Xerces (http://xerces.apache.org/)
   is a good choice. The appropriate jar files must be in the CLASSPATH.

7. The Jakarta Bean Scripting Framework (BSF) jar file, bsf.jar.

8. The izpack-compiler.jar file from the IzPack distribution
   (http://izforge.com/izpack/). This is only necessary if you're going to
   build the graphical installer.

9. The ant-contrib jar file (not supplied). Logic in the Ant build file
   relies on the <outofdate> task from ant-contrib. See
   http://ant-contrib.sourceforge.net"

Many of the jar files are in the "lib" directory created by the curn
installer. However, jars that are only used at compile time (e.g.,
ant-contrib) are not installed with curn and must be downloaded separately.


PREPARATION:
------------

Place the third-party jar files you downloaded, above, in a directory
somewhere (except, obviously, for the Ant jars). Then, in the source
directory (the directory containing curn's "build.xml" file), create a
file called "build.properties", with the following line:

    third.party.jar.dir: /path/to/directory/containing/jars


BUILDING:
---------

1. Normal build:

   Type "ant build" in the top-level directory. The code will be compiled
   to the "build" subdirectory, and you'll get a "curn.jar" file in
   "build/lib".

   Note: The Ant build.xml file is configured to use the default Java
   compiler (usually "modern"). However, I usually build with Jikes
   (http://www-124.ibm.com/developerworks/oss/jikes/). To use Jikes, simply
   run Ant as follows:

	ant -Dbuild.compiler=jikes dist

   See the Ant manual entry for the <javac> task
   (http://ant.apache.org/manual/CoreTasks/javac.html) task for more
   information on the valid values for build.compiler.

2. Release build:

   To build the release distribution, use "ant release". This target builds
   the jar file and bundles the documentation and source into zip files. The
   results are written to version-stamped files in "build/release".

3. Building the graphical installer:

   You must first manually build the "release" target. Then, run
   "ant installer". The resulting installer jar file is written to
   "build/release".


OPTIONAL COMPONENTS:
--------------------

A. RSS Parsers

curn comes with a built-in minimal RSS parser. However, it has support for
integrating other RSS parsers. The third-party Informa and Rome parsers
have also been integrated into curn, via some adapter classes in the
"parsers/informa" and "parsers/rome" directories, respectively. However,
those adapter classes will not build unless you have installed the
appropriate support libraries. If you've installed Informa and/or Rome, and
made the appropriate jar files available in the CLASSPATH, the curn Ant
"build.xml" file will automatically detect their presence and will
build the adapter classes.

See the curn Users Guide for details on using other RSS parsers at run-time.


B. Email support

curn can email its output, rather than simply printing it on standard
output. This is especially useful when multiple output handlers are used.
In that case, the output of each handler is attached to the email message
as a "multipart/alternative" attachment.

However, email support is built and can run only if the clapper.org utility
library's email classes are present (and those work only when the Java Mail
API and the Java Activation Framework are present).

See the documentation for the (separate) clapper.org utility library for
details.
